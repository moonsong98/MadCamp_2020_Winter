[{"/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/index.tsx":"1","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/components/Auth/Auth.components.ts":"2","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/components/Auth/LoginPage.tsx":"3","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/components/Auth/RegisterPage.tsx":"4","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/Root.tsx":"5","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/Screen/WritePage.tsx":"6","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/components/App/Row.tsx":"7","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/Screen/App.tsx":"8","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/Screen/Post.tsx":"9","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/components/Auth/ConfirmPage.tsx":"10"},{"size":600,"mtime":1610973520837,"results":"11","hashOfConfig":"12"},{"size":193,"mtime":1610732976252,"results":"13","hashOfConfig":"12"},{"size":2003,"mtime":1610972948780,"results":"14","hashOfConfig":"12"},{"size":2627,"mtime":1610902998578,"results":"15","hashOfConfig":"12"},{"size":592,"mtime":1610903113287,"results":"16","hashOfConfig":"12"},{"size":2742,"mtime":1610896875336,"results":"17","hashOfConfig":"12"},{"size":2242,"mtime":1610892349325,"results":"18","hashOfConfig":"12"},{"size":3830,"mtime":1610893490514,"results":"19","hashOfConfig":"12"},{"size":291,"mtime":1610892575911,"results":"20","hashOfConfig":"12"},{"size":552,"mtime":1610905397115,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e4udyd",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/index.tsx",[],"/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/components/Auth/Auth.components.ts",[],"/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/components/Auth/LoginPage.tsx",["49","50"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery, gql } from '@apollo/client';\nimport { useCookies } from 'react-cookie';\nimport AuthForm from './Auth.components';\n\nconst LOGIN = gql`\n\tquery Login($username: String!, $password: String!) {\n\t\tlogin(input: { username: $username, password: $password })\n\t}\n`;\n\nfunction LoginPage(): React.ReactElement {\n\tconst [{ username, password }, setCredentials] = useState({\n\t\tusername: '',\n\t\tpassword: '',\n\t});\n\n\tconst [cookies, setCookie] = useCookies(['token']);\n\n\tconst [loginError, setLoginError] = useState('');\n\n\tconst [loggedIn, setLoggedIn] = useState(false);\n\n\tconst [checkLogin, { loading, data }] = useLazyQuery(LOGIN);\n\n\tuseEffect(() => {\n\t\tconsole.log(data);\n\t\tif (!data) {\n\t\t\tsetLoginError('');\n\t\t} else if (data && data.login === '') {\n\t\t\tsetLoggedIn(false);\n\t\t\tsetLoginError('Login Information Is Wrong');\n\t\t} else {\n\t\t\tsetLoggedIn(true);\n\t\t\tsetLoginError('');\n\t\t\tsetCookie('token', data.login);\n\t\t\tconsole.log(cookies);\n\t\t}\n\t}, [cookies, data, setCookie]);\n\n\tconst login = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tcheckLogin({ variables: { username, password } });\n\t};\n\tif (loggedIn) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Logged IN!!</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (loading)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Loading...</p>\n\t\t\t</div>\n\t\t);\n\treturn (\n\t\t<AuthForm onSubmit={login}>\n\t\t\t<label htmlFor=\"username\">\n\t\t\t\tUsername\n\t\t\t\t<input\n\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\tvalue={username}\n\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\tsetCredentials({\n\t\t\t\t\t\t\tusername: event.target.value,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<label htmlFor=\"password\">\n\t\t\t\tPassword\n\t\t\t\t<input\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\tsetCredentials({\n\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\tpassword: event.target.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<button type=\"submit\">Login</button>\n\t\t\t{loginError.length > 0 && <p>{loginError}</p>}\n\t\t</AuthForm>\n\t);\n}\n\nexport default LoginPage;\n","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/components/Auth/RegisterPage.tsx",["51","52","53","54","55"],"import React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { notify } from 'react-notify-toast';\nimport AuthForm from './Auth.components';\n\nconst CREATE_USER = gql`\n\tmutation CreateUser($username: String!, $password: String!, $name: String!, $email: String!) {\n\t\tcreateUser(input: { username: $username, password: $password, name: $name, email: $email }) {\n\t\t\tid\n\t\t\tusername\n\t\t\tpassword\n\t\t\tname\n\t\t\temail\n\t\t\tconfirmed\n\t\t}\n\t}\n`;\n\nfunction RegisterPage() {\n\tconst [registerState, setRegisterData] = useState({\n\t\tusername: '',\n\t\tpassword: '',\n\t\trepeatPassword: '',\n\t\tname: '',\n\t\temail: '',\n\t});\n\n\tconst [sendingEmail, setSendingEmail] = useState(false);\n\tconst [passwordError, setPasswordError] = useState('');\n\tconst [createUser, { data }] = useMutation(CREATE_USER);\n\n\tconst register = (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tif (registerState.password === registerState.repeatPassword) {\n\t\t\tsetPasswordError('');\n\t\t\tcreateUser({ variables: { ...registerState } });\n\t\t} else {\n\t\t\tsetPasswordError('password and repeat password should match');\n\t\t}\n\t};\n\treturn (\n\t\t<AuthForm onSubmit={register}>\n\t\t\t<label htmlFor=\"username\">\n\t\t\t\tusername\n\t\t\t\t<input\n\t\t\t\t\tvalue={registerState.username}\n\t\t\t\t\tname=\"username\"\n\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\tsetRegisterData({\n\t\t\t\t\t\t\t...registerState,\n\t\t\t\t\t\t\tusername: event.target.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<label htmlFor=\"password\">\n\t\t\t\tpassword\n\t\t\t\t<input\n\t\t\t\t\tvalue={registerState.password}\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\tsetRegisterData({\n\t\t\t\t\t\t\t...registerState,\n\t\t\t\t\t\t\tpassword: event.target.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<label htmlFor=\"repeatPassword\">\n\t\t\t\trepeat password\n\t\t\t\t<input\n\t\t\t\t\tvalue={registerState.repeatPassword}\n\t\t\t\t\tname=\"repeatPassword\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\tsetRegisterData({\n\t\t\t\t\t\t\t...registerState,\n\t\t\t\t\t\t\trepeatPassword: event.target.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<label htmlFor=\"name\">\n\t\t\t\tname\n\t\t\t\t<input\n\t\t\t\t\tvalue={registerState.name}\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\tsetRegisterData({\n\t\t\t\t\t\t\t...registerState,\n\t\t\t\t\t\t\tname: event.target.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<label htmlFor=\"email\">\n\t\t\t\temail\n\t\t\t\t<input\n\t\t\t\t\tvalue={registerState.email}\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\tsetRegisterData({\n\t\t\t\t\t\t\t...registerState,\n\t\t\t\t\t\t\temail: event.target.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<button type=\"submit\">Register</button>\n\t\t\t{passwordError.length > 0 && <p>{passwordError}</p>}\n\t\t</AuthForm>\n\t);\n}\n\nexport default RegisterPage;\n","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/Root.tsx",["56"],"import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport LoginPage from './components/Auth/LoginPage';\nimport RegisterPage from './components/Auth/RegisterPage';\nimport ConfirmPage from './components/Auth/ConfirmPage';\nimport App from './Screen/App';\n\nfunction Root() {\n\treturn (\n\t\t<Router>\n\t\t\t<Route exact path=\"/\" component={App} />\n\t\t\t<Route path=\"/login\" component={LoginPage} />\n\t\t\t<Route path=\"/register\" component={RegisterPage} />\n\t\t\t<Route path=\"/signup/confirm/:redisId\" component={ConfirmPage} />\n\t\t</Router>\n\t);\n}\n\nexport default Root;\n","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/Screen/WritePage.tsx",["57","58","59","60","61","62","63","64"],"import React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport '../design/WritePage.css';\n\nconst CREATE_POST = gql`\n\tmutation CreatePost($title: String!, $body: String!) {\n\t\tcreatePost(input: { title: $title, body: $body }) {\n\t\t\tid\n\t\t\ttitle\n\t\t\tbody\n\t\t}\n\t}\n`;\n\ninterface WriteProps {\n\tmovieList: Movie[];\n\tcallBackfunc: (cbMoviesList: Movie[]) => void;\n}\n\ntype Movie = { originalName: string; name: string; posterPath: string };\n\nfunction WritePage(props: WriteProps) {\n\tconst [createPost, { data }] = useMutation(CREATE_POST);\n\tconst [postDetail, setPostDetail] = useState({\n\t\ttitle: '',\n\t\tcontent: '',\n\t});\n\tconst [previewImage, setPreviewImage] = useState({\n\t\timgSrc: '',\n\t});\n\tconst getValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { name, value } = e.target;\n\t\tsetPostDetail({\n\t\t\t...postDetail,\n\t\t\t[name]: value,\n\t\t});\n\t\tconsole.log(postDetail);\n\t};\n\tconst getContentData = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n\t\tconst { name, value } = e.target;\n\t\tsetPostDetail({\n\t\t\t...postDetail,\n\t\t\t[name]: value,\n\t\t});\n\t\tconsole.log(postDetail);\n\t};\n\tconst addMovie = () => {\n\t\tcreatePost({ variables: { title: postDetail.title, body: postDetail.content } });\n\t\tconst newMovie = {\n\t\t\toriginalName: 'Nully',\n\t\t\tname: 'Nully',\n\t\t\tposterPath: 'https://posterspy.com/wp-content/uploads/2020/03/shutter-island-genzo-1280.jpg',\n\t\t};\n\t\tprops.callBackfunc(props.movieList.concat({ ...newMovie }));\n\t};\n\tconst handleFileOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst reader = new FileReader();\n\t\tconsole.log(e.target);\n\t\tconsole.log(e.target.files);\n\t\tconst tmpFiles: FileList | null = e.target.files;\n\t\tconst file = tmpFiles?.item(0);\n\t\tconsole.log(file);\n\t\treader.onloadend = () => {\n\t\t\tconsole.log(reader.result);\n\t\t\tif (reader.result != null) {\n\t\t\t\tconst toString = reader.result.toString();\n\t\t\t\tconst source = {\n\t\t\t\t\timgSrc: toString,\n\t\t\t\t};\n\t\t\t\tsetPreviewImage(source);\n\t\t\t}\n\t\t};\n\t\tif (file != null) {\n\t\t\treader.readAsDataURL(file);\n\t\t}\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"form-wrapper\">\n\t\t\t\t<input className=\"title-input\" type=\"text\" placeholder=\"제목\" onChange={getValue} name=\"title\" />\n\t\t\t\t<textarea className=\"text-area\" placeholder=\"내용\" onChange={getContentData} name=\"content\" />\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"image-input\"\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\taccept=\"image/jpg, image/png, image/jpeg, image/gif\"\n\t\t\t\t\tonChange={handleFileOnChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Link to=\"/\">\n\t\t\t\t<button type=\"submit\" className=\"submit-button\" onClick={addMovie}>\n\t\t\t\t\t입력\n\t\t\t\t</button>\n\t\t\t</Link>\n\t\t\t{previewImage.imgSrc && <img alt=\"error\" className=\"previewImg\" src={previewImage.imgSrc} />}\n\t\t</div>\n\t);\n}\n\nexport default WritePage;\n","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/components/App/Row.tsx",["65","66","67","68","69"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n// import YouTube from 'react-youtube';\nimport '../../design/Row.css';\n\ninterface RowProps {\n\ttitle: string;\n\tisLargeRow?: boolean;\n\trowMovies: Movie[];\n\t// seeDetail:boolean\n}\n\ntype Movie = { originalName: string; name: string; posterPath: string };\n\nconst imgDir = './images';\n\nfunction Row(props: RowProps) {\n\tconst { title, isLargeRow, rowMovies } = props;\n\tconst [movies, setMovies] = useState<Movie[]>(rowMovies);\n\n\t// useEffect(() => {\n\t//     // if [], run once when the row loads, and dont run again\n\t//     async function fetchData() {\n\t//         // const request = await axios.get(fetchUrl);\n\t//         setMovies(preparedMovie);\n\t//     }\n\t// }, []); // <--- fetchUrl 바뀔때 마다 실행되게 하려면  [] 대신 [fetchUrl] 넣으면 됨\n\n\t// setMovies(preparedMovie);\n\n\t/*\n    useEffect(FUNCTION, []) 형식 \n    Row가 load 된 순간 FUNCTION에 해당하는 코드 실행? Row가 load 되면 필요한 정보를 서버에 요청하는 것\n    []이렇게 주면 run once when row loads. useEffect 안에서 쓴거는 []안에 적어 줘야 됨. fetchUrl\n    await : request를 보내면 답이 올 때까지 기다림\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMoives(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [])\n    */\n\n\tconst opts = {\n\t\theight: '390',\n\t\twidth: '640',\n\t\tplayerVars: {\n\t\t\t// https://developers.google.com/youtube/player_parameters\n\t\t\tautoplay: 1,\n\t\t},\n\t};\n\n\t// 최적화를 위해 나중에 img에 key 속성 줘야 됨\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<h2>{title}</h2>\n\n\t\t\t<div className=\"row__posters\">\n\t\t\t\t{/* several row__poster(s) */}\n\t\t\t\t{movies.map((movie) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to=\"/details\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName={`row__poster ${props.isLargeRow && 'row__posterLarge'}`}\n\t\t\t\t\t\t\t\t\tsrc={movie.posterPath}\n\t\t\t\t\t\t\t\t\talt={movie.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<h3> {movie.name} </h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t{/* containers -> posters */}\n\t\t</div>\n\t);\n}\n\nRow.defaultProps = {\n\tisLargeRow: false,\n};\n\nexport default Row;\n","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/Screen/App.tsx",["70","71"],"import React, { useState } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport Row from '../components/App/Row';\nimport PostDetail from './Post';\nimport WritePage from './WritePage';\n\nconst preparedMovie: Movie[] = [\n\t{\n\t\toriginalName: 'Chef',\n\t\tname: 'Chef',\n\t\tposterPath:\n\t\t\t'https://lh3.googleusercontent.com/proxy/t-uyLVyxMdk-ApRakZZ8uEd_gfTi8JoQiIEvYx4ElxeF1FzXBnp0nC_8EG-e8tKHcbhotAfoGrDLcNK9iu-sxYntS2czwq7epS3Ts8z7OQA50rGJlurQ-0ME4eqjL9wv5cYA9TPTH3zrZwEi47tzWOPyy2uQ1sjLWsstdZXDH83khNfSzV4',\n\t},\n\t{\n\t\toriginalName: 'Coco',\n\t\tname: 'Coco',\n\t\tposterPath:\n\t\t\t'https://m.media-amazon.com/images/M/MV5BYjQ5NjM0Y2YtNjZkNC00ZDhkLWJjMWItN2QyNzFkMDE3ZjAxXkEyXkFqcGdeQXVyODIxMzk5NjA@._V1_.jpg',\n\t},\n\t{\n\t\toriginalName: '범죄도시',\n\t\tname: '범죄도시',\n\t\tposterPath:\n\t\t\t'https://lh3.googleusercontent.com/proxy/sQ4gZrtGjoFI6eGU8e_XMR_5K5BxImQKfXeaD5m93hbLNn6EnxjzXqbfXLTZ9wSH32gjKhTGx8ed9BFlg_L2Pel9Z0Y',\n\t},\n\t{\n\t\toriginalName: 'Eternal Sunshine',\n\t\tname: 'Eternal Sunshine',\n\t\tposterPath: 'https://miro.medium.com/max/3200/1*-liR3H_fmJemOp4qOUfpyA.jpeg',\n\t},\n\t{\n\t\toriginalName: 'Fast & Furious 7',\n\t\tname: 'Fast & Furious 7',\n\t\tposterPath:\n\t\t\t'https://cdn.shopify.com/s/files/1/0969/9128/products/Fast_Furious_7_-_Paul_Walker_-_Vin_Diesel_-_Dwayne_Johnson_-_Hollywood_Action_Movie_Poster_dc9198b7-c29f-4725-910c-366cef8dc546.jpg?v=1582543223',\n\t},\n\t{\n\t\toriginalName: 'Martian',\n\t\tname: 'Martian',\n\t\tposterPath: 'https://images-na.ssl-images-amazon.com/images/I/A1%2BFw58qbDL._AC_SL1500_.jpg',\n\t},\n\t{\n\t\toriginalName: 'Midnight in Paris',\n\t\tname: 'Midnight in Paris',\n\t\tposterPath: 'https://m.media-amazon.com/images/M/MV5BMTM4NjY1MDQwMl5BMl5BanBnXkFtZTcwNTI3Njg3NA@@._V1_.jpg',\n\t},\n\t{\n\t\toriginalName: 'Music and Lyrics',\n\t\tname: 'Music and Lyrics',\n\t\tposterPath:\n\t\t\t'https://www.pastposters.com/cw3/assets/product_full/R/music-and-lyrics-cinema-quad-movie-poster-(1).jpg',\n\t},\n\t{\n\t\toriginalName: '기생충',\n\t\tname: '기생충',\n\t\tposterPath:\n\t\t\t'https://upload.wikimedia.org/wikipedia/ko/6/60/%EA%B8%B0%EC%83%9D%EC%B6%A9_%ED%8F%AC%EC%8A%A4%ED%84%B0.jpg',\n\t},\n\t{\n\t\toriginalName: 'The Terminal',\n\t\tname: 'The Terminal',\n\t\tposterPath: 'https://images-na.ssl-images-amazon.com/images/I/91avFh9KUhL._SL1500_.jpg',\n\t},\n\t{\n\t\toriginalName: 'Black Panther',\n\t\tname: 'Black Panther',\n\t\tposterPath: 'https://m.media-amazon.com/images/M/MV5BMTg1MTY2MjYzNV5BMl5BanBnXkFtZTgwMTc4NTMwNDI@._V1_.jpg',\n\t},\n\t{\n\t\toriginalName: '너의 결혼식',\n\t\tname: '너의 결혼식',\n\t\tposterPath: 'https://ojsfile.ohmynews.com/STD_IMG_FILE/2018/0826/IE002383442_STD.jpg',\n\t},\n\t{\n\t\toriginalName: 'Begine Again',\n\t\tname: 'Begin Again',\n\t\tposterPath: 'https://www.movieviral.com/wp-content/uploads/2014/06/begin-again-poster.jpg',\n\t},\n];\n\ntype Movie = { originalName: string; name: string; posterPath: string };\n\nfunction App() {\n\t// 외부 url에서 사진 가져오려면 Row에 fetchUrl props 추가해서 넣어주면 됨\n\tconst [movies, setMovies] = useState<Movie[]>(preparedMovie);\n\n\tconst callBackFunction = (cbMoviesList: Movie[]) => {\n\t\tconsole.log(cbMoviesList);\n\t\tsetMovies(cbMoviesList);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<BrowserRouter>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<Link to=\"/write\">\n\t\t\t\t\t\t<button type=\"button\">글쓰기</button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Row title=\"NETFLIX ORIGINALS\" rowMovies={movies} isLargeRow />\n\t\t\t\t\t<Row title=\"Trending Now\" rowMovies={movies} />\n\t\t\t\t\t<Row title=\"Top Rated\" rowMovies={movies} />\n\t\t\t\t\t<Row title=\"Korean\" rowMovies={movies} />\n\t\t\t\t\t<Row title=\"Action\" rowMovies={movies} />\n\t\t\t\t\t<Row title=\"Romance\" rowMovies={movies} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/details\">\n\t\t\t\t\t<PostDetail />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/write\">\n\t\t\t\t\t<WritePage movieList={movies} callBackfunc={callBackFunction} />\n\t\t\t\t</Route>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/Screen/Post.tsx",["72"],"/Users/moon/Documents/OneDrive - postech.ac.kr/MadCamp/madcamp_3/src/components/Auth/ConfirmPage.tsx",["73","74","75"],"import React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { RouteComponentProps } from 'react-router-dom';\n\nconst CONFIRM_SIGNUP = gql`\n\tmutation ConfrimUser($redisId: String!) {\n\t\tconfirmUser(redisId: $redisId)\n\t}\n`;\n\nfunction ConfirmPage({ match }: RouteComponentProps) {\n\tconsole.log(match.params.redisId);\n\tconst [confirmSignup, { data }] = useMutation(CONFIRM_SIGNUP);\n\tconfirmSignup({ variables: { redisId: match.params.redisId } });\n\treturn (\n\t\t<div>\n\t\t\t<p>Confirm Page</p>\n\t\t</div>\n\t);\n}\n\nexport default ConfirmPage;\n",{"ruleId":"76","severity":1,"message":"77","line":27,"column":3,"nodeType":"78","messageId":"79","endLine":27,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":37,"column":4,"nodeType":"78","messageId":"79","endLine":37,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":19,"column":1,"nodeType":"86","messageId":"87","endLine":19,"endColumn":24},{"ruleId":"80","severity":1,"message":"88","line":28,"column":9,"nodeType":"82","messageId":"83","endLine":28,"endColumn":21},{"ruleId":"80","severity":1,"message":"89","line":28,"column":23,"nodeType":"82","messageId":"83","endLine":28,"endColumn":38},{"ruleId":"80","severity":1,"message":"90","line":30,"column":23,"nodeType":"82","messageId":"83","endLine":30,"endColumn":27},{"ruleId":"84","severity":1,"message":"85","line":8,"column":1,"nodeType":"86","messageId":"87","endLine":8,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":23,"column":1,"nodeType":"86","messageId":"87","endLine":23,"endColumn":38},{"ruleId":"80","severity":1,"message":"90","line":24,"column":23,"nodeType":"82","messageId":"83","endLine":24,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":38,"column":3,"nodeType":"78","messageId":"79","endLine":38,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":46,"column":3,"nodeType":"78","messageId":"79","endLine":46,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":59,"column":3,"nodeType":"78","messageId":"79","endLine":59,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":60,"column":3,"nodeType":"78","messageId":"79","endLine":60,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":63,"column":3,"nodeType":"78","messageId":"79","endLine":63,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":65,"column":4,"nodeType":"78","messageId":"79","endLine":65,"endColumn":15},{"ruleId":"80","severity":1,"message":"91","line":15,"column":7,"nodeType":"82","messageId":"83","endLine":15,"endColumn":13},{"ruleId":"84","severity":1,"message":"85","line":17,"column":1,"nodeType":"86","messageId":"87","endLine":17,"endColumn":30},{"ruleId":"80","severity":1,"message":"92","line":18,"column":17,"nodeType":"82","messageId":"83","endLine":18,"endColumn":27},{"ruleId":"80","severity":1,"message":"93","line":19,"column":17,"nodeType":"82","messageId":"83","endLine":19,"endColumn":26},{"ruleId":"80","severity":1,"message":"94","line":46,"column":8,"nodeType":"82","messageId":"83","endLine":46,"endColumn":12},{"ruleId":"84","severity":1,"message":"85","line":83,"column":1,"nodeType":"86","messageId":"87","endLine":83,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":88,"column":3,"nodeType":"78","messageId":"79","endLine":88,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":11,"column":1,"nodeType":"86","messageId":"87","endLine":11,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":11,"column":1,"nodeType":"86","messageId":"87","endLine":11,"endColumn":53},{"ruleId":"76","severity":1,"message":"77","line":12,"column":2,"nodeType":"78","messageId":"79","endLine":12,"endColumn":13},{"ruleId":"80","severity":1,"message":"90","line":13,"column":26,"nodeType":"82","messageId":"83","endLine":13,"endColumn":30},"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unused-vars","'notify' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'sendingEmail' is assigned a value but never used.","'setSendingEmail' is assigned a value but never used.","'data' is assigned a value but never used.","'imgDir' is assigned a value but never used.","'isLargeRow' is assigned a value but never used.","'setMovies' is assigned a value but never used.","'opts' is assigned a value but never used."]